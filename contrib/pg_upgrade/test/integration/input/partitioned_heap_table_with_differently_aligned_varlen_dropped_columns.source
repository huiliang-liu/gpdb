SHOW server_version;

CREATE TABLE p_diff_aligned_varlena (a int, b float8[], c int) DISTRIBUTED BY (a)
PARTITION BY range(c)
SUBPARTITION BY range(a) (PARTITION varlena START(0) END(42) (SUBPARTITION varlena_first START(0) END(22), SUBPARTITION varlena_second START(22) END(42)));

-- 'b' column is intentionally differently aligned - aclitem has 'i'
-- alignment and timetz has 'd' alignment. If we allow the upgrade then on
-- the new cluster we will fetch column 'c' at the wrong offset.      
CREATE TABLE varlena_first(a int, b numeric, c int);
ALTER TABLE p_diff_aligned_varlena DROP COLUMN b;
INSERT INTO varlena_first VALUES (1, 1.987654321, 1), (2, 2.3456789, 2);
ALTER TABLE varlena_first DROP COLUMN b;
ALTER TABLE p_diff_aligned_varlena ALTER PARTITION varlena EXCHANGE PARTITION varlena_first WITH TABLE varlena_first;

! ./gpdb6/bin/pg_upgrade --mode=dispatcher --old-gp-dbid=1 --new-gp-dbid=1 --check --old-bindir=@upgrade_test_path@/gpdb5/bin --new-bindir=@upgrade_test_path@/gpdb6/bin --old-datadir=@upgrade_test_path@/gpdb5-data/qddir/demoDataDir-1 --new-datadir=@upgrade_test_path@/gpdb6-data/qddir/demoDataDir-1 --old-port=@old_port@;
-- start_ignore
-- end_ignore

-- TODO: Add steps to recreate the table as a workaround
-- Drop the table for now
DROP TABLE p_diff_aligned_varlena;
